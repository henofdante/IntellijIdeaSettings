<application>
  <component name="ConsoleFoldingSettings">
    <option name="removedPositive">
      <list>
        <option value="at java.util.Spliterators$" />
        <option value="at com.intellij.rt.execution." />
        <option value="at reactor.netty.transport." />
        <option value="at org.junit.internal.runners." />
        <option value="at junit.framework.TestCase.assert" />
        <option value="at com.intellij.openapi.util.RecursionGuard" />
        <option value="at java.awt.LightweightDispatcher." />
        <option value="at java.util.stream.AbstractPipeline.wrapAndCopyInto(" />
        <option value="at com.intellij.testFramework.PlatformTestCase" />
        <option value="at com.intellij.junit3." />
        <option value="at org.eclipse.jetty.util." />
        <option value="at org.jboss.resteasy." />
        <option value="at org.junit.platform." />
        <option value="at org.junit.vintage." />
        <option value="at com.intellij.openapi.application.WriteAction." />
        <option value="at com.intellij.openapi.application.impl.LaterInvocator" />
        <option value="at java.awt.EventDispatchThread" />
        <option value="at javax.swing.plaf.basic.BasicMenuItemUI" />
        <option value="at org.eclipse.persistence.internal.jpa." />
        <option value="at java.security.ProtectionDomain$1.doIntersectionPrivilege(" />
        <option value="at io.reactivex.Flowable.subscribe" />
        <option value="at com.intellij.testFramework.LightPlatformTestCase" />
        <option value="at java.util.concurrent.ThreadPoolExecutor" />
        <option value="at java.util.stream.AbstractPipeline.copyInto(" />
        <option value="at java.security.AccessController.doPrivileged(" />
        <option value="at com.intellij.openapi.util.RecursionManager" />
        <option value="at com.intellij.testFramework.HeavyPlatformTestCase" />
        <option value="at junit.framework.Assert.fail" />
        <option value="at com.intellij.testFramework.fixtures.impl.CodeInsightTestFixtureImpl$" />
        <option value="at io.micronaut.http.context." />
        <option value="at io.micronaut.web.router." />
        <option value="at reactor.core.publisher." />
        <option value="at java.awt.Component.processEvent(" />
        <option value="at java.awt.Container.dispatchEventImpl(" />
        <option value="at com.intellij.openapi.application.impl.ApplicationImpl$1.call(" />
        <option value="at io.vertx.ext.web." />
        <option value="at junit.framework.TestCase.run" />
        <option value="at sun.reflect." />
        <option value="at sun.rmi." />
        <option value="at org.testng.SuiteRunner." />
        <option value="at com.intellij.testFramework.fixtures.impl.CodeInsightTestFixtureImpl.checkResult" />
        <option value="at com.intellij.testFramework.fixtures.impl.CodeInsightTestFixtureImpl.lambda$" />
        <option value="at javax.swing.DefaultButtonModel.setPressed(" />
        <option value="at com.intellij.testFramework.fixtures.impl.CodeInsightTestFixtureImpl.access$" />
        <option value="at io.quarkus.runtime." />
        <option value="at org.jboss.threads." />
        <option value="at com.intellij.rt.junit." />
        <option value="at com.intellij.openapi.application.RunResult.run(" />
        <option value="at com.intellij.codeWithMe.ClientId$Companion.withClientId" />
        <option value="at com.intellij.openapi.command.impl.CoreCommandProcessor.executeCommand(" />
        <option value="at org.junit.internal.ComparisonCriteria.arrayEquals(" />
        <option value="at com.intellij.openapi.application.impl.FlushQueue" />
        <option value="at com.intellij.psi.impl.source.PostprocessReformattingAspect." />
        <option value="at junit.framework.TestSuite.run" />
        <option value="at com.jgoodies.binding.beans.ExtendedPropertyChangeSupport.firePropertyChange0(" />
        <option value="at javax.swing.DefaultButtonModel.fireActionPerformed(" />
        <option value="at javax.swing.AbstractButton$Handler.actionPerformed(" />
        <option value="at org.testng.TestNG.run" />
        <option value="at org.testng.TestRunner." />
        <option value="at org.hibernate." />
        <option value="at java.awt.Container.processEvent(" />
        <option value="at io.vertx.core." />
        <option value="at io.ktor." />
        <option value="at javax.swing.AbstractButton.fireActionPerformed(" />
        <option value="at java.security.AccessController.doPrivileged(Native Method)" />
        <option value="at java.util.concurrent.CompletableFuture$AsyncSupply.run(" />
        <option value="at com.intellij.testFramework.UsefulTestCase" />
        <option value="java.lang.reflect.Method.invoke(" />
        <option value="at org.eclipse.jetty.server." />
        <option value="at org.junit.Assert.failSame(" />
        <option value="at org.gradle." />
        <option value="at org.junit.runner.JUnitCore." />
        <option value="at com.intellij.jpa." />
        <option value="at org.springframework.web.filter." />
        <option value="at com.intellij.util.RunnableCallable.call(" />
        <option value="at org.apache.coyote." />
        <option value="at com.intellij.openapi.progress.impl.CoreProgressManager" />
        <option value="at junit.framework.Assert.assert" />
        <option value="at groovy." />
        <option value="at java.util.concurrent." />
        <option value="at reactor.netty.channel." />
        <option value="at org.junit.Assert.failNotSame(" />
        <option value="at junit.framework.TestResult" />
        <option value="at io.netty.handler." />
        <option value="at io.micronaut.reactive.rxjava2." />
        <option value="at com.intellij.openapi.application.TransactionGuardImpl" />
        <option value="at org.junit.jupiter." />
        <option value="at com.intellij.testFramework.EdtTestUtil" />
        <option value="at com.intellij.testFramework.EditorActionTestCase" />
        <option value="at org.junit.Assert.fail(" />
        <option value="at com.intellij.openapi.progress.impl.ProgressManagerImpl" />
        <option value="at org.springframework.web.reactive." />
        <option value="at java.awt.Component.dispatchEvent(" />
        <option value="at javax.swing.JComponent.processMouseEvent(" />
        <option value="at io.reactivex.internal." />
        <option value="at com.intellij.testFramework.propertyBased." />
        <option value="at java.awt.EventQueue.dispatchEventImpl(" />
        <option value="java.lang.reflect.Constructor.newInstance(" />
        <option value="at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(" />
        <option value="at java.awt.Component.dispatchEventImpl(" />
        <option value="at com.intellij.openapi.application.impl.ApplicationImpl.runWriteAction(" />
        <option value="at io.netty.channel." />
        <option value="at com.sun.proxy.$Proxy" />
        <option value="at java.awt.Window.dispatchEventImpl(" />
        <option value="at org.testng.internal." />
        <option value="at io.quarkus.vertx." />
        <option value="at com.intellij.codeWithMe.ClientId.withClientId" />
        <option value="at org.junit.Assert.internalArrayEquals(" />
        <option value="at io.micronaut.http.server.context." />
        <option value="at com.intellij.testFramework.fixtures.impl.CodeInsightTestFixtureImpl.collectAndCheckHighlighting(" />
        <option value="at com.intellij.testFramework.EdtTestUtilKt" />
        <option value="at io.micronaut.servlet.engine." />
        <option value="at org.junit.rules." />
        <option value="at com.intellij.testFramework.LightPlatformCodeInsightTestCase" />
        <option value="at com.intellij.testFramework.ExpectedHighlightingData" />
        <option value="at java.util.concurrent.FutureTask." />
        <option value="at org.apache.tomcat." />
        <option value="at io.micronaut.servlet.http." />
        <option value="at java.awt.EventQueue" />
        <option value="at com.intellij.codeWithMe.ClientId$Companion$withClientId$1" />
        <option value="at org.apache.catalina." />
        <option value="at javax.swing.AbstractButton.doClick(" />
        <option value="at reactor.netty.ReactorNetty" />
        <option value="at org.jetbrains.jetCheck." />
        <option value="at org.springframework.web.servlet." />
        <option value="at java.util.stream.ReduceOps$" />
        <option value="at java.rmi." />
        <option value="at io.micronaut.context." />
        <option value="at com.intellij.junit5." />
        <option value="at com.intellij.openapi.application.ReadAction." />
        <option value="at com.intellij.ide.IdeEventQueue" />
        <option value="at java.awt.event.InvocationEvent.dispatch(" />
        <option value="at org.junit.runners." />
        <option value="at javax.swing.plaf.basic.BasicComboPopup$Handler.mouseReleased(" />
        <option value="at io.micronaut.http.server.netty." />
        <option value="java.lang.Thread.run(" />
        <option value="at com.intellij.openapi.progress.impl.ProgressRunner" />
        <option value="at org.springframework.web.method." />
        <option value="at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(" />
        <option value="at com.intellij.testFramework.EdtTestUtil$Companion$" />
        <option value="at java.util.concurrent.Executors$" />
        <option value="at org.mockito.internal." />
        <option value="at io.r2dbc.postgresql.client.ReactorNettyClient" />
        <option value="at java.security.AccessControlContext$1.doIntersectionPrivilege(" />
        <option value="at java.util.stream.AbstractPipeline.evaluate(" />
        <option value="at java.base/jdk.internal" />
        <option value="at io.micronaut.http.netty." />
        <option value="at com.intellij.openapi.command.WriteCommandAction" />
        <option value="*sys-package-mgr*:" />
        <option value="at reactor.core.scheduler." />
        <option value="at io.netty.util." />
        <option value="at java.awt.Component.processMouseEvent(" />
        <option value="at org.junit.Assert.assert" />
        <option value="at io.quarkus.resteasy.runtime." />
        <option value="at org.codehaus.groovy." />
        <option value="at io.reactivex.Flowable.blockingSubscribe" />
        <option value="at com.intellij.junit4." />
        <option value="at com.intellij.util.messages.impl.MessageBus" />
        <option value="at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(" />
        <option value="at java.util.stream.ReferencePipeline$" />
        <option value="at com.intellij.testFramework.fixtures.CodeInsightTestFixture$" />
      </list>
    </option>
    <option name="removedNegative">
      <list>
        <option value="at org.codehaus.groovy.runtime.DefaultGroovyMethods." />
        <option value="at org.codehaus.groovy.vmplugin.v5.PluginDefaultGroovyMethods." />
        <option value="at org.codehaus.groovy.runtime.DefaultGroovyMethodsSupport." />
      </list>
    </option>
  </component>
</application>